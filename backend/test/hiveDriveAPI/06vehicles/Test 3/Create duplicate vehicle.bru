meta {
  name: Create duplicate vehicle
  type: http
  seq: 2
}

post {
  url: https://localhost:8080/api/vehicles
  body: json
  auth: none
}

headers {
  Authorization: Bearer {{access_token_employee}}
}

body:json {
  {
    "name": "Station 2",
    "vehicleCategory": 1,
    "producer": 1,
    "status": "Werkstatt",
    "receptionDate": "2021-08-15T14:30:45Z",
    "completionDate": "2021-08-15T14:30:45Z"
  }
}

tests {
  test("Status = 201", function() {
    const data = res.getBody();
    expect(res.getStatus()).to.equal(201);
  });
  
  test("ID is correct?", function() {
    const data = res.getBody();
    expect (data.id).exists;
  });
  
  test("Name is correct?", function() {
    const data = res.getBody();
    expect (data.name).to.equal("Station 2");
  });
  
  test("vehicleCategory is correct?", function() {
    const data = res.getBody();
    expect (data.vehicleCategory).to.equal(1);
  });
  
  test("Producer is correct?", function() {
    const data = res.getBody();
    expect (data.producer).to.equal(1);
  });
  
  test("Status is correct?", function() {
    const data = res.getBody();
    expect (data.status).to.equal("Werkstatt");
  });
  
    test("ReceptionDate is correct?", function() {
      const data = res.getBody();
      expect (data.receptionDate).to.equal("2021-08-15T14:30:45Z");
    });
  
    test("CompletionDate is correct?", function() {
      const data = res.getBody();
      expect (data.completionDate).to.equal("2021-08-15T14:30:45Z");
    });
}
